# Clear the environment
rm(list = ls())    

# Load required libraries
library(data.table)     
library(survival)       
library(ggplot2)        
library(purrr)          
library(dplyr)          
library(bujar)          
library(patchwork)      
library(survminer)      

# Number of patients and iterations
n <- 1000     
num_iterations <- 100  # Number of times to generate data and run BJ Boosting  

# Initialize matrix to store variable selection results
num_vars <- 26  # 6 main variables + 20 gene variables
selection_results <- matrix(0, nrow = num_iterations, ncol = num_vars)    
colnames(selection_results) <- c("TumorSize", "Severity", "Height", "Weight", "Gender", "BloodType", paste0("Gene", 1:20))    

# Set fixed seed for BJ Boosting (modeling)
set.seed(100)  # Fixed seed for modeling

# Run BJ boosting for variable selection with different seeds for data generation
for (iter in 1:num_iterations) {    
  
  set.seed(iter)  # Change seed for different data generation  
  
  # Function to generate random treatments  
  assign_treatments <- function(n, proportions) {    
    treatments <- c("A", "B", "P")    
    sample(treatments, size = n, replace = TRUE, prob = proportions)    
  }      
  
  # Stage 1: Patient data with treatments  
  states_stage1 <- data.table(    
    Treatment = assign_treatments(n, c(1/3, 1/3, 1/3)),    
    TumorSize = numeric(n),    
    Severity = numeric(n),    
    Age = runif(n, 20, 50),    
    Height = runif(n, 160 / 30.48, 180 / 30.48),    
    Weight = runif(n, 50 * 2.20462, 100 * 2.20462),    
    Gender = as.numeric(factor(sample(c("M", "F"), n, replace = TRUE))),    
    BloodType = as.numeric(factor(sample(c("A", "B", "AB", "O"), n, replace = TRUE))),    
    survival.month.1st = numeric(n)    
  )    
  
  # Generate 20 gene variables  
  for (i in 1:20) {    
    states_stage1[[paste0("Gene", i)]] <- rnorm(n, mean = 0, sd = 1)    
  }    
  
  # Define Tumor Size and Severity  
  states_stage1$TumorSize[states_stage1$Treatment == "A"] <- runif(sum(states_stage1$Treatment == "A"), 5, 6)    
  states_stage1$TumorSize[states_stage1$Treatment == "B"] <- runif(sum(states_stage1$Treatment == "B"), 3, 4)    
  states_stage1$TumorSize[states_stage1$Treatment == "P"] <- runif(sum(states_stage1$Treatment == "P"), 1, 2)    
  states_stage1$Severity <- as.numeric(factor(states_stage1$Treatment, levels = c("A", "B", "P"), labels = c(3, 2, 1)))    
  
  # Generate true survival times  
  states_stage1$survival.month.1st <- pmax(    
    20 - 1.45*states_stage1$TumorSize - 3*states_stage1$Severity +    # 1.45,3. 
      rowSums(states_stage1[, paste0("Gene", 1:20), with = FALSE]) * 0.001 +    
      0.001 * states_stage1$Height - 0.001 * states_stage1$Weight -    
      0.001 * states_stage1$Gender - 0.001 * states_stage1$BloodType,    
    0.001    
  )    
  
  # Generate Censoring  
  Censoring <- runif(n, 0, 20)  
  delta <- ifelse(states_stage1$survival.month.1st <= Censoring, 1, 0)
  mean(delta)
  states_stage1$delta <- ifelse(states_stage1$survival.month.1st <= Censoring, 1, 0)    
  states_stage1$y <- pmin(states_stage1$survival.month.1st, Censoring)    
  
  # Prepare predictors  
  X <- as.matrix(states_stage1[, c("TumorSize", "Severity", "Height", "Weight", "Gender", "BloodType", paste0("Gene", 1:20)), with = FALSE])    
  
  # Set fixed seed for BJ Boosting (ensures same model selection for all datasets)  
  set.seed(100)    
  
  # Run BJ boosting for variable selection  
  BJLS <- bujar(y = log(states_stage1$y), cens = states_stage1$delta, x = X,    
                cv = FALSE, mstop = 1000, twin = TRUE, mstop2 = 100)      
  
  # Store selection results  
  if (!is.null(BJLS$xselect) && length(BJLS$xselect) == num_vars) {    
    selection_results[iter, ] <- as.numeric(BJLS$xselect != 0)    
  } else {    
    warning("BJLS$xselect is NULL or unexpected length in iteration ", iter)    
  }    
}    

# Summarize variable selection frequency  
selection_summary <- colMeans(selection_results)    

# Convert to a data frame for visualization  
selection_df <- data.frame(Variable = names(selection_summary), Frequency = selection_summary)    

# Ensure correct ordering of variables (Gene20 → Gene1 → BloodType → Gender → Weight → Height → Severity → TumorSize)  
selection_df$Variable <- factor(selection_df$Variable, levels = rev(c("TumorSize", "Severity", "Height", "Weight", "Gender", "BloodType", paste0("Gene", 1:20))))    

# Print selection frequencies  
print(selection_df)    


ggplot(selection_df, aes(x = Variable, y = Frequency)) + 
  geom_bar(stat = "identity", fill = "steelblue") + 
  coord_flip() + 
  labs(title = "Variable Selection Frequency in BJ Twin Boosting", 
       x = "Variable", y = "Selection Frequency") + 
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5)) +  # Centers the title
  scale_y_continuous(limits = c(0, 1))  # Sets x-axis range from 0 to 1

